<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
    <description>The coding standard for our project.</description>


    <file>app</file>
    <file>bootstrap</file>
    <file>config</file>
    <file>database</file>
    <file>resources/lang</file>
    <file>routes</file>
    <file>tests</file>

    <exclude-pattern>bootstrap/cache/*</exclude-pattern>
    <exclude-pattern>bootstrap/autoload.php</exclude-pattern>
    <exclude-pattern>*/migrations/*</exclude-pattern>
    <exclude-pattern>*/seeders/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*.blade.php</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>


    <rule ref="PSR2">
        <exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter"/>
        <exclude name="Generic.Files.LineEndings"/>
    </rule>

    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.NamingConventions.ValidVariableName.NotCamelCaps"/>

    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>

    <!-- TODO :: fix all warnings -->
    <!-- <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="5"/>
        </properties>
    </rule> -->

    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <!-- Exclude warning if founds a method which does not use a parameter in a extended class -->
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClass"/>
    </rule>

    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3"/>
            <property name="absoluteNestingLevel" value="5"/>
        </properties>
    </rule>

    <rule ref="PEAR.Commenting.FunctionComment">
        <exclude-pattern>./tests/Unit/*</exclude-pattern>
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>
    </rule>

    <rule ref="Generic.Files.LineLength">
       <exclude-pattern>./tests/*</exclude-pattern>
       <exclude-pattern>*/Requests/*</exclude-pattern>
    </rule>

    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <rule ref="PEAR.WhiteSpace">
        <exclude name="PEAR.WhiteSpace.ScopeIndent"/>
    </rule>

    <!-- not PEAR -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <rule ref="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps">
        <exclude-pattern>./tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes" />
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints" />
    <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition" />
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing" />
    <!-- <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing" /> -->

    <rule ref="SlevomatCodingStandard.Classes.ClassStructure" />
    <rule ref="SlevomatCodingStandard.Classes.RequireConstructorPropertyPromotion" />
    <rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces" >
        <properties>
            <property name="linesCountBeforeClosingBrace" value="0"/>
            <property name="linesCountAfterOpeningBrace" value="0"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators" />

    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue" />
    <rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction" />
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInCall" />
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration" />

    <rule ref="SlevomatCodingStandard.Functions.RequireMultiLineCall"  >
        <properties>
            <property name="minLineLength" value="120"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.RequireSingleLineCall" >
        <properties>
            <property name="maxLineLength" value="120"/>
        </properties>
    </rule>
    <!-- TODO :: gives a lot of errors, will take a while to fix -->
    <!-- <rule ref="SlevomatCodingStandard.Functions.FunctionLength" >
        <properties>
            <property name="maxLinesLength" value="30"/>
        </properties>
    </rule> -->

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses" />
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias" />
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses" />
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing" />
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing" />
    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse" />
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine" />
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly" />
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />

    <rule ref="SlevomatCodingStandard.PHP.ForbiddenClasses" />
    <rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion" />
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking" />
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon" />
    <rule ref="SlevomatCodingStandard.PHP.ShortList" />
    <rule ref="SlevomatCodingStandard.PHP.TypeCast" />

    <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable" />
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable" />

    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch" />

    <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement" />
    <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace" />
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma" />

    <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ConstantSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition" />
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition" />
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference" />
    <rule ref="SlevomatCodingStandard.Classes.ParentCallSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />

    <rule ref="SlevomatCodingStandard.Classes.RequireMultiLineMethodSignature" >
        <properties>
            <property name="minLineLength" value="120"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.RequireSingleLineMethodSignature" >
        <properties>
            <property name="maxLineLength" value="120"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses" />
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullSafeObjectOperator" />
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator" />
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison" />
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn" />
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator" />

    <rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing">
        <properties>
            <property name="controlStructures" type="array">
                <element value="switch"/>
                <element value="foreach"/>
            </property>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit">
        <properties>
            <property name="ignoreStandaloneIfInScope" value="true"/>
            <property name="ignoreOneLineTrailingIf" value="true"/>
            <property name="ignoreTrailingIfWithOneInstruction" value="true"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces" >
        <properties>
            <property name="ignoreSpacesInComment" value="true"/>
            <property name="ignoreSpacesInParameters" value="true"/>
            <property name="ignoreSpacesInAnnotation" value="true"/>
        </properties>
    </rule>

    <!-- Show progression -->
    <arg value="p"/>
</ruleset>
